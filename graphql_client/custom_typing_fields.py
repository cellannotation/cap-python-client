# Generated by ariadne-codegen

from .base_operation import GraphQLField


class CapUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CapUserGraphQLField":
        self._alias = alias
        return self


class ProjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectGraphQLField":
        self._alias = alias
        return self


class DatasetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetGraphQLField":
        self._alias = alias
        return self


class DatasetErrorGQLGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetErrorGQLGraphQLField":
        self._alias = alias
        return self


class DatasetUpdateJobGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetUpdateJobGraphQLField":
        self._alias = alias
        return self


class LabelsetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelsetGraphQLField":
        self._alias = alias
        return self


class LabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelGraphQLField":
        self._alias = alias
        return self


class PolygonCoordGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PolygonCoordGraphQLField":
        self._alias = alias
        return self


class LabelRelationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelRelationGraphQLField":
        self._alias = alias
        return self


class LabelFeedbackGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelFeedbackGraphQLField":
        self._alias = alias
        return self


class LabelFeedbackExplanationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelFeedbackExplanationGraphQLField":
        self._alias = alias
        return self


class ExplanationDataUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ExplanationDataUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ExplanationDataUnion":
        self._alias = alias
        return self


class FeedbackExplanationDataMergeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataMergeGraphQLField":
        self._alias = alias
        return self


class FeedbackExplanationDataRefineGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataRefineGraphQLField":
        self._alias = alias
        return self


class FeedbackExplanationDataRefineChangesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataRefineChangesGraphQLField":
        self._alias = alias
        return self


class FeedbackExplanationDataCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataCommentGraphQLField":
        self._alias = alias
        return self


class FeedbackExplanationDataSplitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataSplitGraphQLField":
        self._alias = alias
        return self


class FeedbackExplanationDataSplitLabelsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FeedbackExplanationDataSplitLabelsGraphQLField":
        self._alias = alias
        return self


class LabelScoresGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelScoresGraphQLField":
        self._alias = alias
        return self


class DatasetSeuratStatusResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSeuratStatusResponseGraphQLField":
        self._alias = alias
        return self


class EmbeddingGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingGroupGraphQLField":
        self._alias = alias
        return self


class EmbeddingDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingDataGraphQLField":
        self._alias = alias
        return self


class EmbeddingMapGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingMapGraphQLField":
        self._alias = alias
        return self


class EmbeddingDataAnnotationItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingDataAnnotationItemGraphQLField":
        self._alias = alias
        return self


class EmbeddingClustersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingClustersGraphQLField":
        self._alias = alias
        return self


class EmbeddingClusterTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingClusterTypeGraphQLField":
        self._alias = alias
        return self


class HeatmapGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HeatmapGraphQLField":
        self._alias = alias
        return self


class AnnotationsObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AnnotationsObjectGraphQLField":
        self._alias = alias
        return self


class GenesObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GenesObjectGraphQLField":
        self._alias = alias
        return self


class ObsIDSObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObsIDSObjectGraphQLField":
        self._alias = alias
        return self


class ScoresObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScoresObjectGraphQLField":
        self._alias = alias
        return self


class IsInSelectionsObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IsInSelectionsObjectGraphQLField":
        self._alias = alias
        return self


class HeatmapTopGenesBySelectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HeatmapTopGenesBySelectionGraphQLField":
        self._alias = alias
        return self


class ClusteredHeatmapGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClusteredHeatmapGraphQLField":
        self._alias = alias
        return self


class ObsDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObsDetailsGraphQLField":
        self._alias = alias
        return self


class ObsDetailsResponsePointGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObsDetailsResponsePointGraphQLField":
        self._alias = alias
        return self


class GeneRowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GeneRowGraphQLField":
        self._alias = alias
        return self


class HighlyVariableGeneRowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HighlyVariableGeneRowGraphQLField":
        self._alias = alias
        return self


class GenesRowsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GenesRowsGraphQLField":
        self._alias = alias
        return self


class ComplexSelectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComplexSelectionGraphQLField":
        self._alias = alias
        return self


class SankeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SankeyGraphQLField":
        self._alias = alias
        return self


class SankeyDataLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SankeyDataLinkGraphQLField":
        self._alias = alias
        return self


class SankeyDataNodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SankeyDataNodeGraphQLField":
        self._alias = alias
        return self


class StandardResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StandardResponseGraphQLField":
        self._alias = alias
        return self


class ProjectPermissionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectPermissionGraphQLField":
        self._alias = alias
        return self


class LabelSynonymGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelSynonymGraphQLField":
        self._alias = alias
        return self


class GroupedMetadataResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupedMetadataResponseGraphQLField":
        self._alias = alias
        return self


class DatasetMetadataCountResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetMetadataCountResponseGraphQLField":
        self._alias = alias
        return self


class UploadResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UploadResponseGraphQLField":
        self._alias = alias
        return self


class UploadErrorItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UploadErrorItemGraphQLField":
        self._alias = alias
        return self


class DatasetLookupResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetLookupResponseGraphQLField":
        self._alias = alias
        return self


class DatasetsHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetsHighlightGraphQLField":
        self._alias = alias
        return self


class DatasetDownloadUrlsResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetDownloadUrlsResponseGraphQLField":
        self._alias = alias
        return self


class DatasetValidationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetValidationGraphQLField":
        self._alias = alias
        return self


class DatasetValidationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetValidationResultGraphQLField":
        self._alias = alias
        return self


class DatasetValidationResultDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetValidationResultDataGraphQLField":
        self._alias = alias
        return self


class DatasetValidatioNResultErrorsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetValidatioNResultErrorsGraphQLField":
        self._alias = alias
        return self


class LabelsetValidationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelsetValidationResultGraphQLField":
        self._alias = alias
        return self


class LabelsetValidationResultErrorsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelsetValidationResultErrorsGraphQLField":
        self._alias = alias
        return self


class LabelValidationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelValidationResultGraphQLField":
        self._alias = alias
        return self


class LabelValidationResultErrorsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelValidationResultErrorsGraphQLField":
        self._alias = alias
        return self


class DatasetModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetModelGraphQLField":
        self._alias = alias
        return self


class LabelsetModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelsetModelGraphQLField":
        self._alias = alias
        return self


class LabelModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelModelGraphQLField":
        self._alias = alias
        return self


class HomepageStatisticsResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HomepageStatisticsResponseGraphQLField":
        self._alias = alias
        return self


class StateResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StateResponseGraphQLField":
        self._alias = alias
        return self


class LabelCategoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelCategoryGraphQLField":
        self._alias = alias
        return self


class TissueTermGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TissueTermGraphQLField":
        self._alias = alias
        return self


class TissueLowerTermGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TissueLowerTermGraphQLField":
        self._alias = alias
        return self


class OperationResultResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OperationResultResponseGraphQLField":
        self._alias = alias
        return self


class OperationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OperationResultGraphQLField":
        self._alias = alias
        return self


class DeleteResultResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteResultResponseGraphQLField":
        self._alias = alias
        return self


class DatasetAsyncHCStartResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetAsyncHCStartResponseGraphQLField":
        self._alias = alias
        return self


class DeleteProjectResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectResponseGraphQLField":
        self._alias = alias
        return self


class ApproveInvitationResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApproveInvitationResponseGraphQLField":
        self._alias = alias
        return self


class AvatarUploadStatusResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AvatarUploadStatusResponseGraphQLField":
        self._alias = alias
        return self
